---
Name: "site-destroy"
Description: "Cleanup Edge Site for Multi-Site Manager"
Documentation: |
  Relies on Cloud-Decomission
ExtraClaims:
  - scope: "machines"
    action: "*"
    specific: "*"
  - scope: "endpoints"
    action: "*"
    specific: "*"
Templates:
  - Contents: |-
      #!/bin/bash
      # RackN Copyright 2020

      set -e
      {{template "setup.tmpl" .}}

      {{ if .ParamExists "dr-server/install-drpid" }}
      DRPID={{ regexFind "[a-zA-Z0-9-]+" (.Param "dr-server/install-drpid") }}
      {{ else }}
      DRPID="{{ regexFind "[a-zA-Z0-9-]+" (list "site" .Machine.Name | join "-") }}"
      {{ end }}

      {{ if (.Param "demo/force") }}
      echo "force enabled - skipping endpoint check"
      {{ else }}
      if drpcli endpoints exists $DRPID; then

        # get machines on local endpoint
        echo "Collecting machines on edge"
        UUIDS=$(drpcli machines list Endpoint Eq $DRPID Locked Eq false Context Eq "" | jq -r '.[].Uuid')
        for uuid in $UUIDS; do
          if drpcli machines get $uuid "cloud/dmi-hypervisor" > /dev/null ; then
            echo "  $uuid running cloud-decommission"
            drpcli machines workflow $uuid "cloud-decommission" > /dev/null
          else
            echo "  $uuid skipping, no cloud/dmi-hypervisor"
          fi
        done

        echo "Waiting for complete"
        for uuid in $UUIDS; do
          echo "  waiting for $uuid"
          drpcli machines wait $uuid WorkflowComplete true 360  > /dev/null
        done

        echo "Destroying Endpoint registration"
        drpcli endpoints destroy $DRPID > /dev/null

      else
        echo "No action - endpoint is not registered"
      fi
      {{ end }}

      echo "done"
      exit 0
    Name: "drp-endpoint-destroy"
Meta:
  icon: "heart"
  color: "green"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
