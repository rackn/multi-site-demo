---
Name: "dr-server-seed"
Description: "Setup Files for Digital Rebar Server"
Documentation: |
  Copy Files from Multi-Site-Manager to Local DR Server
ExtraClaims:
  - scope: "files"
    action: "*"
    specific: "*"
  - scope: "contexts"
    action: "*"
    specific: "*"
  - scope: "profiles"
    action: "*"
    specific: "global"
  - scope: "users"
    action: "*"
    specific: "rocketskates"
Templates:
  - Contents: |-
      #!/bin/bash
      # RackN Copyright 2020

      set -e
      {{template "setup.tmpl" .}}

      # local endpoint
      echo "Collecting info from manager"
      drpcli contexts show runner > runner.json
      raw=$(drpcli contexts list Engine=docker-context)
      contexts=$(jq -r ".[].Name" <<< "${raw}")

      echo "Pointing DRPCLI to Proxy Endpoint $EPID"
      EPID={{ .Machine.Name }}

      echo "copy over Prefix to {{ .Param "demo/cluster-prefix" }}"
      drpcli -u $EPID profiles set global set "demo/cluster-prefix" to "{{ .Param "demo/cluster-prefix" }}" >/dev/null

      if drpcli -u $EPID contexts exists runner ; then
        echo "runner context already installed"
      else
        echo "adding local runner context"
        drpcli -u $EPID contexts create - < runner.json  > /dev/null
      fi

      {{ if .ParamExists "color "}}
        echo "setting UX color to {{ .Param "color" }}"
        drpcli extended -l ux_settings create '{
          "Target": "user++rocketskates",
          "Type": "ux_settings",
          "Option": "ux.cosmetic.navbar_color",
          "Id": "user++rocketskates++ux.cosmetic.navbar_color",
          "Value": "\"{{ .Param "color" }}\""
        }' > /dev/null
        drpcli extended -l ux_settings create '{
          "Target": "user++{{ .Machine.Name }}",
          "Type": "ux_settings",
          "Option": "ux.cosmetic.navbar_color",
          "Id": "user++rocketskates++ux.cosmetic.navbar_color",
          "Value": "\"{{ .Param "color" }}\""
        }' > /dev/null
      {{ end }}

      echo "Populate the contexts from local"
      i=0
      for context in $contexts; do
        image=$(jq -r ".[$i].Image" <<< "${raw}")
        echo "Installing Container for $context named from $image"
        drpcli -u $EPID files upload {{ .ProvisionerURL }}/files/contexts/docker-context/${image} as contexts/docker-context/${image} > /dev/null
        i=$(($i + 1))
      done

      if drpcli -u {{ .Machine.Name }} users password rocketskates {{ .Param "dr-server/initial-password" }} > /dev/null; then
        echo "Set rocketskates password for {{ .Machine.Name }}"
      else
        echo "WARNING: error setting rocketskates password"
      fi

      echo "done"
      exit 0
    Name: "drp-install"
Meta:
  icon: "heart"
  color: "green"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
